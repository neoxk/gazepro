name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: app/package-lock.json

      - run: npm ci
      - run: npm test
      - run: npm run build

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/v')

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-linux:
    needs: [build-and-test, create-release]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    defaults:
      run:
        working-directory: app

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: app/package-lock.json

      - run: npm ci
      - run: npm run build:linux

      - name: Find AppImage file
        id: find_file
        run: echo "file_path=$(find dist -name '*.AppImage' -print -quit)" >> $GITHUB_OUTPUT

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: app/${{ steps.find_file.outputs.file_path }}
          asset_name: gazepro-${{ github.ref_name }}-linux.AppImage
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-windows:
    needs: [build-and-test, create-release]
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v')
    defaults:
      run:
        working-directory: app

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: app/package-lock.json

      - run: npm ci
      - run: npm run build:win

      - name: Find EXE file
        id: find_file
        shell: bash
        run: echo "file_path=$(find dist -name '*.exe' -print -quit)" >> $GITHUB_OUTPUT

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: app/${{ steps.find_file.outputs.file_path }}
          asset_name: gazepro-${{ github.ref_name }}-win.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
